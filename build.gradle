import com.android.build.gradle.AppPlugin
import com.android.build.gradle.BaseExtension
import org.jetbrains.kotlin.gradle.dsl.KotlinCompile
import com.android.build.gradle.BasePlugin

// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
  ext.versions = [
    minSdk: 24,
    compileSdk: 33,
    kotlin: '1.8.10',
    composeUi: '1.4.0-alpha05',
    composeCompiler: '1.4.2',
    composeUiMaterial3: '1.1.0-alpha05',
    appCompat: '1.6.0',
    testParamInjector: '1.10',
  ]

  repositories {
    google()
    mavenCentral()
    maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
  }

  dependencies {
    classpath "com.android.tools.build:gradle:7.4.1"
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin"
    classpath "com.vanniktech:gradle-maven-publish-plugin:0.19.0"
    classpath "org.jetbrains.dokka:dokka-gradle-plugin:1.7.20"
    classpath "app.cash.paparazzi:paparazzi-gradle-plugin:1.2.0"
  }
}

allprojects {
  repositories {
    google()
    mavenCentral()
    maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
  }
}

task clean(type: Delete) {
  delete rootProject.buildDir
}

subprojects { subproject ->
  plugins.withType(BasePlugin) { plugin ->

    def android = project.extensions.getByName("android") as BaseExtension
    def isApp = plugin instanceof AppPlugin

    if (!isApp) {
      android.resourcePrefix "telephoto_"
    }

    android.compileSdk versions.compileSdk
    android.defaultConfig {
      minSdk versions.minSdk
    }
    android.compileOptions {
      sourceCompatibility = JavaVersion.VERSION_11
      targetCompatibility = JavaVersion.VERSION_11
    }
    android.buildFeatures {
      compose = true
    }
    android.composeOptions {
      kotlinCompilerExtensionVersion versions.composeCompiler
    }
    android.lintOptions {
      abortOnError true
    }
  }

  tasks.withType(org.jetbrains.kotlin.gradle.dsl.KotlinJvmCompile).configureEach { task ->
    task.kotlinOptions {
      jvmTarget = "11"
    }
  }

  tasks.withType(KotlinCompile).configureEach { task ->
    task.kotlinOptions {
      freeCompilerArgs += [
        '-Xcontext-receivers',
        '-Xjvm-default=all'
      ]
    }
  }
}
